#!/usr/bin/env bash

# Colors: FG (foreground), BG (background), HL (highlighted)
FG_COLOR="#bbbbbb"
BG_COLOR="#111111"
HLFG_COLOR="#111111"
HLBG_COLOR="#bbbbbb"
BORDER_COLOR="#222222"

# Options not related to colors (most rofi options do not work anymore)
ROFI_OPTIONS=(-theme ~/.config/rofi/powermenu.rasi)

enable_confirmation=false

usage="$(basename "$0") [-h] [-c] -- display a menu for shutdown, reboot, lock, etc.

where:
	-h	show this help text
	-c	ask for user confirmation

This script depends on:
	- systemd,
	- i3,
	- rofi."

while getopts "hc" option; do
	case "${option}" in
		h) echo "${usage}"
			exit 0
			;;
		c) enable_confirmation=true
			;;
		*) exit 1
			;;
	esac
done

function command_exists() {
  command -v "$1" &> /dev/null 2>&1
}

# systemctl required
if ! command_exists systemctl ; then
  exit 1
fi

# menu defined as an associative array
typeset -A menu

# Menu with keys/commands

menu=(
  [ Shutdown]="systemctl poweroff"
  [ Reboot]="systemctl reboot"
  [ Suspend]="systemctl suspend"
  [ Hibernate]="systemctl hibernate"
  [ Lock]="~/.config/i3/scripts/blur-lock"
  [ Logout]="i3-msg exit"
  [ Cancel]=""
)

menu_nrows=${#menu[@]}

# Menu entries that may trigger a confirmation message
menu_confirm="Shutdown Reboot Hibernate Suspend Halt Logout"

launcher_exe=""
launcher_options=""
rofi_colors=""

rofi_colors=(-bc "${BORDER_COLOR}" -bg "${BG_COLOR}" -fg "${FG_COLOR}" \
	-hlfg "${HLFG_COLOR}" -hlbg "${HLBG_COLOR}")
launcher_exe="rofi"
launcher_options=(-dmenu -i -lines "${menu_nrows}" -p "${ROFI_TEXT}" \
	"${rofi_colors}" "${ROFI_OPTIONS[@]}")

# No launcher available
if [[ -z "${launcher_exe}" ]]; then
  exit 1
fi

launcher=(${launcher_exe} "${launcher_options[@]}")
selection="$(printf '%s\n' "${!menu[@]}" | sort | "${launcher[@]}")"

function ask_confirmation() {
  if [ "${launcher_exe}" == "rofi" ]; then
    confirmed=$(echo -e "Yes\nNo" | rofi -dmenu -i -lines 2 -p "${selection}?" \
      "${rofi_colors}" "${ROFI_OPTIONS[@]}")
    [ "${confirmed}" == "Yes" ] && confirmed=0
  elif [ "${launcher_exe}" == "zenity" ]; then
    zenity --question --text "Are you sure you want to ${selection,,}?"
    confirmed=$?
  fi

  if [ "${confirmed}" == 0 ]; then
    i3-msg -q "exec --no-startup-id ${menu[${selection}]}"
  fi
}

if [[ $? -eq 0 && ! -z ${selection} ]]; then
  if [[ "${enable_confirmation}" = true && \
        ${menu_confirm} =~ (^|[[:space:]])"${selection}"($|[[:space:]]) ]]; then
    ask_confirmation
  else
    i3-msg -q "exec --no-startup-id ${menu[${selection}]}"
  fi
fi

